{"version":3,"sources":["components/NavBar.js","components/ToDo.js","components/ToDoList.js","components/AddTask.js","initialData.js","components/Fetching.js","components/App.js","index.js"],"names":["NavBar","_ref","onDeleteCompleted","react_default","a","createElement","className","id","react_router_dom","to","exact","index_esm","onClick","ToDo","state","completed","_this","props","task","toggleCompleted","setState","prevState","onToggleCompleted","_this2","this","name","React","Component","ToDoList","filteredTasks","tasks","match","params","filter","length","Fragment","map","components_ToDo","key","AddTask","handleSubmit","e","preventDefault","onAddTask","newTask","value","history","push","onSubmit","form","type","required","ref","input","initialData","Fetching","App","fetching","componentDidMount","delay","Math","floor","random","setTimeout","taskId","taskToUpdate","find","newTaskName","uniqueid","concat","Object","toConsumableArray","components_Fetching","react_router","path","render","components_AddTask","assign","components_ToDoList","components_NavBar","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2d782fed.chunk.js","sourcesContent":["import React from 'react'\nimport { FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash } from 'react-icons/fa'\nimport { NavLink } from 'react-router-dom'\n\nconst NavBar = ({onDeleteCompleted}) => (\n    <footer className=\"d-flex justify-content-between bg-secondary p-3\" id=\"mainFooter\">\n        <div className=\"btn-group\">\n            <NavLink to=\"/\" className=\"btn btn-outline-dark bg-light\" exact={true}><FaListAlt /></NavLink>\n            <NavLink to=\"/completed\" className=\"btn btn-outline-dark bg-light\"><FaCheckSquare /></NavLink>\n            <NavLink to=\"/add-task\" className=\"btn btn-outline-dark bg-light\" exact={true}><FaPlusSquare /></NavLink>\n        </div>\n        <button className=\"btn btn-outline-dark bg-light\" onClick={onDeleteCompleted}><FaTrash /></button>\n    </footer>\n)\n\nexport default NavBar","import React from 'react'\r\n\r\nclass ToDo extends React.Component{\r\n\r\n\r\n    state = {\r\n        completed: this.props.task.completed\r\n    }\r\n\r\n    toggleCompleted = () => {\r\n        this.setState(prevState => ({\r\n            completed: !prevState.completed\r\n        }))\r\n        this.props.onToggleCompleted(this.props.task.id)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <li className={\"list-group-item d-flex align-tiems-center \" + (this.state.completed? 'bg-success': null)}>\r\n                {this.props.task.name} \r\n                <button className={\"btn btn-sm ml-auto \" + (this.state.completed? 'btn-success': 'btn-outline-success')} onClick={() => this.toggleCompleted()}>&#x2713;</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDo","import React from 'react'\nimport ToDo from './ToDo'\n\nconst ToDoList = ({tasks, match, onToggleCompleted}) => {\n\n    let filteredTasks\n\n    switch(match.params.filter){\n        case 'completed':\n            filteredTasks = tasks.filter(task => task.completed)\n        break;\n\n        default: \n        filteredTasks = tasks\n    }\n\n    if (filteredTasks.length === 0) {\n        return(\n        <>\n            <h1 className=\"m-3\">Liste de tâches</h1>\n            <ul className=\"list-group m-3\">\n                <li className=\"list-group-item\">Aucune tâches à afficher.</li>\n            </ul>\n        </>\n        )\n    } else {\n        return(\n            <>\n                <h1 className=\"m-3\">Liste de tâches</h1>\n                <ul className=\"list-group m-3\">\n                    {\n                        filteredTasks.map((task) => <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted} />)\n                    }\n                </ul>\n            </>\n        )\n    }\n}\nexport default ToDoList","import React from 'react'\r\n\r\nclass AddTask extends React.Component{\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onAddTask(this.newTask.value)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section>\r\n                <h1 className=\"m-3\">Nouvelle tâche</h1>\r\n                <div className=\"card mx-3\">\r\n                    <form className=\"card-body\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                        <div className=\"form-group\">\r\n                            <label form=\"taskName\">Nom de la tâche</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"taskName\" id=\"taskName\" required ref={input => this.newTask = input} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Créer</button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask","let initialData = [\n    {id: 'jsertu7a', name: 'Ranger la vaisselle', completed: false},\n    {id: 'jseruo7l', name: 'Répondre appel d\\'offres', completed: false},\n    {id: 'jseruy2q', name: 'Signer contrat', completed: false},\n    {id: 'jserv4sw', name: 'Aspirer le salon', completed: false}\n]\n\nexport default initialData;","import React from 'react'\r\nimport { FaSpinner } from 'react-icons/fa'\r\n\r\nconst Fetching = () => (\r\n    <div className=\"fetching\">\r\n        <FaSpinner className=\"spinner\" />\r\n    </div>\r\n)\r\n\r\n\r\nexport default Fetching","import React from 'react'\nimport NavBar from './NavBar'\nimport ToDoList from './ToDoList'\nimport AddTask from './AddTask'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport initialData from '../initialData'\nimport uniqueid from 'uniqueid'\nimport Fetching from './Fetching'\n\nclass App extends React.Component{\n\n    state = {\n        tasks: [],\n        fetching: true\n    }\n\n    componentDidMount = () => {\n        let delay = Math.floor(Math.random() * 5000)\n\n        setTimeout(() => {\n            this.setState({\n                fetching: false,\n                tasks: initialData\n            })\n        }, delay);\n    }\n\n    onToggleCompleted = (taskId) => {\n        let taskToUpdate = this.state.tasks.find(task => task.id === taskId)\n        taskToUpdate.completed = !taskToUpdate.completed\n\n\n        this.setState(prevState => (\n            prevState.tasks.map(task => {\n                return task.id === taskId ? taskToUpdate :task\n            })\n        ))\n    }\n\n    onAddTask = (newTaskName) => {\n        let newTask = {\n            id: uniqueid(),\n            name: newTaskName,\n            completed: false\n        }\n\n        this.setState(prevState => ({\n            tasks: [...prevState.tasks, newTask]\n        }))\n    }\n\n\n    onDeleteCompleted = () => {\n        this.setState(prevState => {\n            let newState = prevState.tasks.filter(task => !task.completed)\n            return {\n                tasks: newState\n            }\n        })\n    }\n\n\n\n    render(){\n        return(\n            <section id=\"todo\">\n                {this.state.fetching? <Fetching /> : null}\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\n                        <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n                    </Switch>\n                    <NavBar onDeleteCompleted={this.onDeleteCompleted} />\n                </BrowserRouter>\n            </section>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\nimport './css/toDo.css';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}